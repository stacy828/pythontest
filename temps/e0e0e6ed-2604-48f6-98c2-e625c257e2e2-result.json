{"name": "test_api_negative_002", "status": "broken", "statusDetails": {"message": "Exception: API调用失败：400 Client Error: Bad Request for url: http://shop-xo.hctestedu.com/index.php?s=?application=web&application_client_type=pc&token=token&pid=0", "trace": "url = 'http://shop-xo.hctestedu.com/index.php?s=?application=web&application_client_type=pc&token=token&pid=0'\nmethod = 'POST', params = None, data = None, json = None, headers = None\ntimeout = 30, kwargs = {}, response = <Response [400]>\n\n    def call_api(\n        url: str,\n        method: str = 'GET',\n        params: Optional[Dict[str, Any]] = None,\n        data: Optional[Union[Dict[str, Any], str]] = None,\n        json: Optional[Dict[str, Any]] = None,\n        headers: Optional[Dict[str, str]] = None,\n        timeout: int = 30,\n        **kwargs\n    ) -> requests.Response:\n    \n        method = method.upper() #将method值转为大写\n        try:\n            response = requests.request(method=method,\n                                        url=url,\n                                        params=params,\n                                        data=data,\n                                        json=json,\n                                        headers=headers,\n                                        timeout=timeout,\n                                        **kwargs)\n            print(response.json())\n>           response.raise_for_status() #在http错误时抛出异常\n\ntestcases\\test_placeholder_api.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://shop-xo.hctestedu.com/index.php?s=?application=web&application_client_type=pc&token=token&pid=0\n\nD:\\python\\lib\\site-packages\\requests\\models.py:1026: HTTPError\n\nDuring handling of the above exception, another exception occurred:\n\n    @responses.activate\n    def test_api_negative_002():\n        param = {\"application\": \"web\",\"application_client_type\":\"pc\",\"token\":\"token\",\"pid\":0}\n        query_string = urlencode(param)\n        url = f\"{base_url}?{query_string}\"\n        responses.add(\n            responses.POST,\n            url,\n            json={\"msg\": \"success\",\"code\": 0,\"data\": []},\n            status=400\n        )\n>       response = call_api(url=url, method=\"POST\")\n\ntestcases\\test_demo1.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nurl = 'http://shop-xo.hctestedu.com/index.php?s=?application=web&application_client_type=pc&token=token&pid=0'\nmethod = 'POST', params = None, data = None, json = None, headers = None\ntimeout = 30, kwargs = {}, response = <Response [400]>\n\n    def call_api(\n        url: str,\n        method: str = 'GET',\n        params: Optional[Dict[str, Any]] = None,\n        data: Optional[Union[Dict[str, Any], str]] = None,\n        json: Optional[Dict[str, Any]] = None,\n        headers: Optional[Dict[str, str]] = None,\n        timeout: int = 30,\n        **kwargs\n    ) -> requests.Response:\n    \n        method = method.upper() #将method值转为大写\n        try:\n            response = requests.request(method=method,\n                                        url=url,\n                                        params=params,\n                                        data=data,\n                                        json=json,\n                                        headers=headers,\n                                        timeout=timeout,\n                                        **kwargs)\n            print(response.json())\n            response.raise_for_status() #在http错误时抛出异常\n            return response\n        except requests.exceptions.RequestException as e:\n>           raise Exception(f\"API调用失败：{str(e)}\")\nE           Exception: API调用失败：400 Client Error: Bad Request for url: http://shop-xo.hctestedu.com/index.php?s=?application=web&application_client_type=pc&token=token&pid=0\n\ntestcases\\test_placeholder_api.py:50: Exception"}, "start": 1761614695441, "stop": 1761614695443, "uuid": "6574c40d-9444-42ca-b3b9-0b11db89573d", "historyId": "fb1525416aa2c99695d2ef6eefdb230d", "testCaseId": "b03737411e9d35a4b91608e995ab9afb", "fullName": "testcases.test_demo1#test_api_negative_002", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_demo1"}, {"name": "host", "value": "DESKTOP-SQEMBVG"}, {"name": "thread", "value": "15580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_demo1"}]}